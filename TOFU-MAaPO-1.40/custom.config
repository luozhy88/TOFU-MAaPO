//Change this file to your own custom values before running this pipeline!

// Job paramaters to set for this environment

params {


  // Software DB locations, UNCOMMENT AND CHANGE THEM




   metaphlan_db = "/home/changrong/Metaphlan4_database/4.0"
  
   kraken2_db = "/data/changrong/save_220T_user/changrong/databases_nfcore-taxprofilers_nfcore-mag/Kraken2_database/k2_standard_20230314"

   humann_db = "/home/changrong/Humann3_database" 

   gtdbtk_reference = "/data/changrong/save_220T_user/changrong/databases_nfcore-taxprofilers_nfcore-mag/GTDBtk_database/release202"

	'genomes' {
		'human' {
      bowtie_index = "/data/changrong/save_220T_user/changrong/databases_igenomes/Homo_sapiens/NCBI/GRCh38/Sequence/Bowtie2Index"
		}
		'mmu'{
      bowtie_index = "/data/changrong/save_220T_user/changrong/databases_igenomes/Mus_musculus/NCBI/Bowtie2Index_NCBI_GRCm39/GRCm39"
    }
	}

  // MAXIMUM PER PROCESS CONFIGS, CHANGE THEM TO YOUR HARDWARE SPECS
  max_memory = 600.GB
  max_cpus = 100
  max_time = 300.h
  maxMultiqcEmailFileSize = 25.MB  
  
  //Scratch
  scratch = false
}

singularity {
	enabled = true

  // Singularity configs, CHANGE THEM TO YOUR USED FILESYSTEM AND SINGULARTIY CACHE
        runOptions = "-B /data3/zhiyu"
        cacheDir = "/home/zhiyu/data/temp/shotgun/singularity_cache"
}




//Defaults for each process:
process {
  //Default executor for each process:
  executor='local'
}


executor {
  //Default for total execution, remove this part when not executor='local':
  cpus = 60
  memory = 300.GB
}

// EXAMPLE FOR SLURM QUEUE MANAGER:
//executor {
  //name="slurm"
  //queueSize=35
  //queue = 'all'
//}



// FOLLOWING THINGS SHOULD NOT BE NEEDED TO BE CHANGED

// Process setting

process {
  shell = ['/bin/bash', '-euo', 'pipefail']

  errorStrategy = { task.attempt <= 3 ? 'retry' : 'finish' }
  maxRetries = 3
  maxErrors = '-1'

  // Global cluster parameters
  cpus = { check_max( 4 * task.attempt, 'cpus' ) }
  memory = { check_max( 16.GB * task.attempt, 'memory' ) }
  time = { check_max( 8.h * task.attempt, 'time' ) }

  // Specific cluster parameters for each process

  withLabel: 'local_run' {
    executor = 'local'
    cpus = { check_max( 1 * task.attempt, 'cpus' ) }
    memory = { check_max( 4.GB * task.attempt, 'memory' ) }
    time = { check_max( 8.h * task.attempt, 'time' ) }
    container = "docker://ikmb/metagenome:1.3.2"
  }
  
  withLabel: 'local_download' {
    executor = 'local'
    maxForks = 3
    cpus = { check_max( 1 * task.attempt, 'cpus' ) }
    memory = { check_max( 4.GB * task.attempt, 'memory' ) }
    time = { check_max( 8.h * task.attempt, 'time' ) }
    container = "docker://ikmb/metagenome:1.3.2"
  }

  withLabel: 'default' {
    cpus = { check_max( 4 * task.attempt, 'cpus' ) }
    memory = { check_max( 16.GB * task.attempt, 'memory' ) }
    time = { check_max( 8.h * task.attempt, 'time' ) }
    container = "docker://ikmb/metagenome:1.3.2"
  }

  withLabel: 'default_highmemory' {
    cpus = { check_max( 4 * task.attempt, 'cpus' ) }
    memory = { check_max( 64.GB * (2**(task.attempt-1)), 'memory' ) }
    time = { check_max( 24.h * task.attempt, 'time' ) }
    container = "docker://ikmb/metagenome:1.3.2"
  }

  withLabel: 'fastqc' {
	  cpus = { check_max( 8 * task.attempt, 'cpus' ) }
    memory = { check_max( 8.GB * task.attempt, 'memory' ) }
    time = { check_max( 8.h * task.attempt, 'time' ) }
    container = "docker://quay.io/biocontainers/fastqc:0.11.9--hdfd78af_1"
  }

  withLabel: 'metaphlan' {
    cpus = { check_max( 8 * task.attempt, 'cpus' ) }
    memory = { check_max( 32.GB * task.attempt, 'memory' ) }
    time = { check_max( 16.h * task.attempt, 'time' ) }
    container = "docker://ikmb/metagenome:1.3.2"
  }

  withLabel: 'bbmap' {
	  cpus = { check_max( 12 * task.attempt, 'cpus' ) }
    memory = { check_max( 32.GB * task.attempt, 'memory' ) }
	  time = { check_max( 12.h * task.attempt, 'time' ) }
    container = "docker://quay.io/biocontainers/bbmap:39.00--h5c4e2a8_0"
  }

  withLabel: 'fastp' {
	  cpus = { check_max( 4 * task.attempt, 'cpus' ) }
    memory = { check_max( 8.GB * task.attempt, 'memory' ) }
	  time = { check_max( 12.h * task.attempt, 'time' ) }
    container = "docker://quay.io/biocontainers/fastp:0.23.4--hadf994f_2"
  }

  withLabel: 'bowtie2qc' {
	  cpus = { check_max( 12 * task.attempt, 'cpus' ) }
    memory = { check_max( 32.GB * task.attempt, 'memory' ) }
	  time = { check_max( 12.h * task.attempt, 'time' ) }
    container = "docker://ikmb/metagenome:1.3.2"
  }

  withLabel: 'vamb' {
	  cpus = { check_max( 12 * task.attempt, 'cpus' ) }
    memory = { check_max( 32.GB * task.attempt, 'memory' ) }
	  time = { check_max( 72.h * task.attempt, 'time' ) }
    container = "docker://quay.io/biocontainers/vamb:3.0.2--py36h91eb985_2"
  }

  withLabel: 'bowtie2' {
    cpus = { check_max( 12 * task.attempt, 'cpus' ) }
  	memory = { check_max( 64.GB * task.attempt, 'memory' ) }
  	time = { check_max( 48.h * task.attempt, 'time' ) }
    container = "docker://ikmb/metagenome:1.3.2"
	  //container = "docker://quay.io/biocontainers/bowtie2:2.4.2--py38h1c8e9b9_1"
  }

  withLabel: 'megahit' {
    cpus = { check_max( 12 * task.attempt, 'cpus' ) }
  	memory = { check_max( 128.GB * task.attempt, 'memory' ) }
  	time = { check_max( 72.h * task.attempt, 'time' ) }
    container = "docker://quay.io/biocontainers/megahit:1.2.9--h2e03b76_1"
  }

  withLabel: 'metabat2' {
    cpus = { check_max( 12 * task.attempt, 'cpus' ) }
  	memory = { check_max( 64.GB * task.attempt, 'memory' ) }
  	time = { check_max( 72.h * task.attempt, 'time' ) }
    container = "docker://ikmb/metagenome:1.3.2"
  }

  withLabel: 'checkm' {
    cpus = { check_max( 12 * task.attempt, 'cpus' ) }
  	memory = { check_max( 80.GB * task.attempt, 'memory' ) }
  	time = { check_max( 72.h * task.attempt, 'time' ) }
    container = "docker://quay.io/biocontainers/checkm-genome:1.1.3--py_1"
    maxForks = 5
  }

  withLabel: 'gtdbtk' {
    cpus = { check_max( 12 * task.attempt, 'cpus' ) }
  	memory = { check_max( 64.GB * task.attempt, 'memory' ) }
  	time = { check_max( 168.h * task.attempt, 'time' ) }
    container = "docker://quay.io/biocontainers/gtdbtk:2.3.0--pyhdfd78af_2"
  }

  withLabel: 'humann' {
	  cpus = { check_max( 12 * task.attempt, 'cpus') }
	  memory = { check_max( 64.GB * (2**(task.attempt-1)), 'memory') }
	  time = { check_max( 24.h * task.attempt, 'time') }
    container = "docker://ikmb/metagenome:1.3.2"
	}

  withLabel: 'multiqc' {
    cpus = { check_max( 8 * task.attempt, 'cpus' ) }
    memory = { check_max( 8.GB * task.attempt, 'memory' ) }
    time = { check_max( 8.h * task.attempt, 'time' ) }
	  container = "docker://quay.io/biocontainers/multiqc:1.15--pyhdfd78af_0"
  }

  withLabel: 'kraken' {
    container = "docker://quay.io/biocontainers/kraken2:2.1.2--pl5321h9f5acd7_2"
    cpus = { check_max( 8 * task.attempt, 'cpus' ) }
    memory = { check_max( 64.GB * task.attempt, 'memory' ) }
    time = { check_max( 16.h * task.attempt, 'time' ) }
  }

  withLabel: 'bracken' {
    cpus = { check_max( 4 * task.attempt, 'cpus' ) }
    memory = { check_max( 16.GB * task.attempt, 'memory' ) }
    time = { check_max( 16.h * task.attempt, 'time' ) }
    container = "docker://quay.io/biocontainers/bracken:2.8--py27hc30c61c_0"
  }

  withLabel: 'magscot' {
    cpus = { check_max( 8 * task.attempt, 'cpus' ) }
    memory = { check_max( 32.GB * task.attempt, 'memory' ) }
    time = { check_max( 16.h * task.attempt, 'time' ) }
    container = "docker://ikmb/magscot:latest"
  }

  withLabel: 'maxbin2' {
    cpus = { check_max( 8 * task.attempt, 'cpus' ) }
  	memory = { check_max( 32.GB * task.attempt, 'memory' ) }
  	time = { check_max( 24.h * task.attempt, 'time' ) }
    container = "docker://quay.io/biocontainers/maxbin2:2.2.7--h87f3376_4"
  }

  withLabel: 'concoct' {
    cpus = { check_max( 8 * task.attempt, 'cpus' ) }
  	memory = { check_max( 32.GB * task.attempt, 'memory' ) }
  	time = { check_max( 24.h * task.attempt, 'time' ) }
    container = "docker://ikmb/metagenome:1.3.2"
    //container = "docker://quay.io/biocontainers/concoct:1.1.0--py310h07c81ac_3"
  }

  withLabel: 'salmon' {
    cpus = { check_max( 8 * task.attempt, 'cpus' ) }
    memory = { check_max( 80.GB * task.attempt, 'memory' ) }
    time = { check_max( 1.h * task.attempt, 'time' ) }
    container = "docker://quay.io/biocontainers/salmon:1.10.1--hecfa306_2"
  }

  // Global cluster parameters

    cpus = { check_max( 4 * task.attempt, 'cpus' ) }
    memory = { check_max( 16.GB * task.attempt, 'memory' ) }
    time = { check_max( 8.h * task.attempt, 'time' ) }
}